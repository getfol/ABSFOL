;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; GETFOL version 2.001
;; Date: Tue Nov  9 19:09:53 MET 1993
;;
;; This    FOL file was modified in GETFOL version 2.001
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; FOL version 2.001
;; This file is an FOL source file: cmdcxt.fol
;; Date: Wed Oct 20 10:43:04 MET 1993
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                          ;;
;;   Copyright (c) 1986-1987 by Richard Weyhrauch.  All rights reserved.    ;;
;;   Copyright (c) 1987-1988 by Fausto Giunchiglia.  All rights reserved.   ;;
;;                                                                          ;;
;;   This software is being provided to you, the LICENSEE, by Richard       ;;
;;   Weyhrauch and Fausto Giunchiglia, the AUTHORS, under certain rights    ;;
;;   and obligations.  By obtaining, using and/or copying this software,    ;;
;;   you indicate that you have read, understood, and will comply with      ;;
;;   the following terms and conditions:                                    ;;
;;                                                                          ;;
;;   THE AUTHORS MAKE NO REPRESENTATIONS OF WARRANTIES, EXPRESS OR          ;;
;;   IMPLIED.  By way of example, but not limitation, THE AUTHORS MAKE      ;;
;;   NO REPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OF FITNESS FOR     ;;
;;   ANY PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE        ;;
;;   COMPONENTS OR DOCUMENTATION WILL NOT INFRINGE ANY PATENTS,             ;;
;;   COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.                                ;;
;;                                                                          ;;
;;   The AUTHORS shall not be held liable for any direct, indirect or       ;;
;;   consequential damages with respect to any claim by LICENSEE or any     ;;
;;   third party on account of or arising from this Agreement or use of     ;;
;;   this software.  Permission to use, copy, modify and distribute this    ;;
;;   software and its documentation for any purpose and without fee or      ;;
;;   royalty is hereby granted, provided that the above copyright notice    ;;
;;   and disclaimer appears in and on ALL copies of the software and        ;;
;;   documentation, whether original to the AUTHORS or a modified           ;;
;;   version by LICENSEE.                                                   ;;
;;                                                                          ;;
;;   The name of the AUTHORS may not be used in advertising or publicity    ;;
;;   pertaining to distribution of the software without specific, written   ;;
;;   prior permission.  Notice must be given in supporting documentation    ;;
;;   that such distribution is by permission of the AUTHORS.  The AUTHORS   ;;
;;   make no representations about the suitability of this software for     ;;
;;   any purpose.  It is provided "AS IS" without express or implied        ;;
;;   warranty.  Title to copyright to this software and to any associated   ;;
;;   documentation shall at all times remain with the AUTHORS and LICENSEE  ;;
;;   agrees to preserve same.  LICENSEE agrees to place the appropriate     ;;
;;   copyright notice on any such copies.                                   ;;
;;                                                                          ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; *****************************************************************
; *                                                               *
; *                       cmdcxt.fol                              *
; *                                                               *
; * This file contains the routines for interpreting the commands *
; * which are related to the multi-proof/multi-context operations *
; * (naming, creating, switching, copying proofs and contexts;    *
; * resetting of the GETFOL-system)                               *
; * and to the topic of metatheory (reflection and m-attachment)  *
; *                                                               *
; *****************************************************************
;

;
; Reset of the GETFOL system
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (RESET#)                                                 *
; *                                                               *
; * DESCRIPTION                                                   *
; *     Resets the GETFOL-system, that is deletes the information *
; *     about the contexts in elementary and non-elementary view  *
; *                                                               *
; *****************************************************************
;
(DEFLAM RESET# ()
 (SEQ
  (ENDL)
  (PRINTMES "Resetting the whole GETFOL-system")
  (cur-ctext-forget)
  (ctext2ectext (ctext-mak-empty (ctext-emptyname-get)))
  (clist-ini)))


;manipulating contexts
;
;naming the current context
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (NAMECTX#)                                               *
; *                                                               *
; * DESCRIPTION                                                   *
; *      needed to make a context name                            *
; *                                                               *
; *****************************************************************
;
(DEFLAM  NAMECTX# ()
 (IFN (CURCTEXT-UNNAMED?)
  (FERRM0 "The current context is already named")
  (LET ((CNAME (FOLSYM# "NAMECONTEXT")))
   (IF (CTEXT-UNNAMED? CNAME)
    (GERRM0 CNAME " is the name of the unnamed context.")
    (IF (CTEXT-NAME? CNAME)
     (GERRM0 CNAME " is already a context name.")
     (SEQ
      (ENDL)
      (clist-set-ctext (ctext-mak-empty CNAME))
      (curcname-set CNAME)
      (CS-EPRINC2 "You have named the current context: " CNAME)))))))


;making a new (empty) context
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (MAKECTX#)                                               *
; *                                                               *
; * DESCRIPTION                                                   *
; *      needed to make a new context                             *
; *                                                               *
; *****************************************************************
;
(DEFLAM MAKECTX# ()
 (LET ((CNAME (FOLSYM# "MAKECONTEXT")))
  (IF (CTEXT-UNNAMED? CNAME)
   (GERRM0 CNAME " is the name of the unnamed context.")
   (IF (CTEXT-NAME? CNAME)
    (GERRM0 CNAME " is already a context name.")
    (SEQ
     (ENDL)
     (clist-set-ctext (ctext-mak-empty CNAME))
     (CS-EPRINC2 "You have created the empty context: " CNAME))))))



;copying the curent context
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (COPYCTEXT#)                                             *
; *                                                               *
; * DESCRIPTION                                                   *
; *      needed to copy a current ctext                           *
; *                                                               *
; *****************************************************************
;
(DEFLAM COPYCTEXT# ()
 (LET ((CNAME (FOLSYM# "COPYCONTEXT")))
  (IF (CTEXT-UNNAMED? CNAME)
   (GERRM0 CNAME " is the name of the unnamed context.")
   (IF (CTEXT-NAME? CNAME)
    (GERRM0 CNAME " is already a context name.")
    (SEQ
     (ENDL)
     (cur-ctext-copy CNAME)
     (CS-EPRINC2
      "You have copied the current context in the context: " CNAME))))))


;switching context
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (SWITCHCTX#)                                             *
; *                                                               *
; * DESCRIPTION                                                   *
; *      needed to change the current context to another context  *
; *                                                               *
; *****************************************************************
;
(DEFLAM SWITCHCTX# ()
 (IF (CURCTEXT-UNNAMED?)
  (FERRM0 "The current context has to be named before switching context")
  (LET ((CNAME (CNAME#)))
   (IF (CURCTEXT-NAME? CNAME)
    (CS-EPRINC1 "You are already there: current state not saved.")
    (SEQ
     (ENDL)
     (ctext-switch CNAME)
     (CS-EPRINC2 "You are now using context: " CNAME)
     (IFN (CURPROOF-UNNAMED?)
      (PROOF-EPRINC2 "You are now using proof: " (curpname-get))
      (PROOF-EPRINC1  "You are switching to a proof with no name.")))))))

;copying a language
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (COPYLEX#)                                               *
; *                                                               *
; * DESCRIPTION                                                   *
; *      needed to copy a language in the current ctext           *
; *                                                               *
; *****************************************************************

(DEFLAM COPYLEX# ()
 (LET
  ((CNAME (CNAME#)))
  (IF (CURCTEXT-NAME? CNAME)
   (FERRM0 "You cannot copy the lex of the current context")
   (symls-copy
    (lex-get-symls (context-get-lex
		    (ctext-get-context (clist-get-ctext CNAME))))))))

